generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model product {
  id               Int                @id @default(autoincrement())
  name             String
  category         Int?
  factory_number   String?
  housing          String?
  quantity         Decimal?           @db.Decimal
  minimum_quantity Decimal?           @db.Decimal
  storageplace     String?
  entrydate        DateTime?          @db.Timestamp(6)
  updatedate       DateTime?          @db.Timestamp(6)
  number           String?
  manufacturer     String?
  product_document product_document[]
  product_price    product_price[]
}

model product_document {
  id          Int     @id(map: "productdocument_pkey") @default(autoincrement())
  product_id  Int
  description String?
  path        String?
  filename    String?
  product     product @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model product_price {
  product_id  Int
  supplier_id Int
  quantity    Int
  price       Decimal  @db.Decimal
  product     product  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_price")
  supplier    supplier @relation(fields: [supplier_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "supplier_id")

  @@id([product_id, supplier_id, quantity])
  @@ignore
}

model product_supplier {
  product_id   Int
  supplier_id  Int
  number       String?
  product_page String?

  @@id([product_id, supplier_id], map: "productsupplier_pkey")
}

model product_type {
  id   Int     @id(map: "producttype_pkey") @default(autoincrement())
  name String?
}

model product_value {
  product_id   Int
  value        Decimal? @db.Decimal
  unitid       Int?
  valuename_id Int

  @@id([product_id, valuename_id], map: "productvalue_pkey")
}

model supplier {
  id            Int             @id @default(autoincrement())
  name          String
  product_price product_price[]
}

model unit {
  id       Int     @id @default(autoincrement())
  unit     String
  baseunit Int
  factor   Decimal @db.Decimal
}

model valuename {
  id          Int     @default(autoincrement())
  group_id    Int
  name        String?
  unitbase_id Int?

  @@id([id, group_id])
}
